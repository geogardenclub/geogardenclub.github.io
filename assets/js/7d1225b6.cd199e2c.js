"use strict";(self.webpackChunkgeogardenclub_github_io=self.webpackChunkgeogardenclub_github_io||[]).push([[1648],{7756:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var s=t(4848),n=t(8453);const i={hide_table_of_contents:!0},a="Backups",r={id:"develop/backups",title:"Backups",description:"Our backup approach involves both automated daily backups by Firebase as well as a manual script for off-site backup and storage.",source:"@site/docs/develop/backups.md",sourceDirName:"develop",slug:"/develop/backups",permalink:"/docs/develop/backups",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"developSidebar",previous:{title:"Screenshots",permalink:"/docs/develop/screenshots"},next:{title:"Scripts",permalink:"/docs/develop/scripts"}},l={},c=[{value:"Automated daily backups",id:"automated-daily-backups",level:2},{value:"The run_backup.sh script",id:"the-run_backupsh-script",level:2},{value:"Installation",id:"installation",level:2}];function d(e){const o={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"backups",children:"Backups"})}),"\n",(0,s.jsx)(o.p,{children:"Our backup approach involves both automated daily backups by Firebase as well as a manual script for off-site backup and storage."}),"\n",(0,s.jsx)(o.h2,{id:"automated-daily-backups",children:"Automated daily backups"}),"\n",(0,s.jsxs)(o.p,{children:["We use the Cloud Firestore scheduled backup system, documented ",(0,s.jsx)(o.a,{href:"https://firebase.google.com/docs/firestore/backups",children:"here"}),". Through this mechanism, we keep snapshots of the database for the past 8 days. Here is a screenshot of the console showing these backups:"]}),"\n",(0,s.jsx)("img",{src:"/img/develop/backup-8-days.png"}),"\n",(0,s.jsx)(o.p,{children:"This is good for disaster recovery for database (i.e. collection) related problems where we discover the problem within a week."}),"\n",(0,s.jsx)(o.p,{children:"There are some disaster scenarios that this mechanism does not cover:"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsx)(o.p,{children:"If the problem involves images or other data stored in Cloud Storage, this backup will not enable recovery. (That said, Cloud Storage does support recovery of deleted images for a limited period of time.)"}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsx)(o.p,{children:"If the entire GGC Google Project is somehow deleted, then we are out of luck."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"the-run_backupsh-script",children:"The run_backup.sh script"}),"\n",(0,s.jsxs)(o.p,{children:["To provide a mechanism for downloading both the Firebase collections and the Google Cloud Storage files for off-site storage, we have the ",(0,s.jsx)(o.code,{children:"run_backup.sh"})," script. Once installed by someone with appropriate Firebase privileges (currently only Philip), invoking the script results in the following:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"./run_backup.sh\n11:54:19 Starting firestore export to cloud storage\n11:54:39 Starting download of cloud storage\n11:54:55 Starting download of Firebase collections as JSON\n11:56:40 Backup completed. See 2025-06-09_11.54.19.backup.log for details.\n11:56:40 Next step: compress and upload backups/2025-06-09_11.54.19 to external storage\n"})}),"\n",(0,s.jsx)(o.p,{children:"As the script output indicates, this backup process involves the following:"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsx)(o.li,{children:'All firebase collections are copied (in binary format) to a "subbucket" in the root Google Cloud Storage bucket for GGC.'}),"\n",(0,s.jsx)(o.li,{children:"The root Google Cloud Storage bucket for the GGC app is downloaded to a local directory. This root bucket contains both the binary format backup of the GGC collections, and all the images uploaded by users for the GGC app."}),"\n",(0,s.jsx)(o.li,{children:"Next, the firebase collections are downloaded in JSON format. This makes it possible to manually inspect and potentially restore individual documents if needed."}),"\n",(0,s.jsx)(o.li,{children:"The script concludes by notifying the user to compress and upload the directory to external storage.  The script also creates a log file containing output from the various commands."}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:'The script currently takes about 2 minutes to execute. When it concludes, there will be a new directory (named something like "2025-06-09_11.54.19") in an adjacent "backups" directory containing a JSON file with the collection documents in JSON format (named something like "2025-06-09_11.54.19.json"), as well as a directory containing a copy of the GGC Google Cloud Storage root bucket (named "ggc-app-2de7b.appspot.com"). For example:'}),"\n",(0,s.jsx)("img",{src:"/img/develop/backup-local-dir.png"}),"\n",(0,s.jsx)(o.p,{children:"Note that one result of running the script is to create a new bucket (folder) in Google Cloud Storage containing the binary backup. This folder is timestamped:"}),"\n",(0,s.jsx)("img",{src:"/img/develop/backup-cloud-storage-dir.png"}),"\n",(0,s.jsx)(o.p,{children:'There is no automated mechanism for deletion of these buckets. This means that each time you run this script, you are adding a new snapshot to this directory and the download will include any previous snapshots from prior runs. It is up to a GGC admin to periodically "garbage collect" old backups from this directory.'}),"\n",(0,s.jsx)(o.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(o.p,{children:'There is "installation" associated with the automated daily backups; this is managed through the Google Cloud Console.'}),"\n",(0,s.jsxs)(o.p,{children:["To run the ",(0,s.jsx)(o.code,{children:"run_backups.sh"})," script, you must:"]}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["Install gcloud.  Installation instructions are ",(0,s.jsx)(o.a,{href:"https://cloud.google.com/sdk/docs/downloads-interactive",children:"here"})]}),"\n",(0,s.jsxs)(o.li,{children:["Configure gcloud by running ",(0,s.jsx)(o.code,{children:"gcloud init"}),"."]}),"\n",(0,s.jsxs)(o.li,{children:["Install ",(0,s.jsx)(o.a,{href:"https://www.npmjs.com/package/@endran/firestore-export-import",children:"@endran/firestore-export-import"}),'. Note that you need to create a json file that you store locally with service account information. See the "Notes" section for information on how to do this. Please name this file "ggc-app-service-account.json" so that it is automatically git-ignored.']}),"\n"]})]})}function h(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>a,x:()=>r});var s=t(6540);const n={},i=s.createContext(n);function a(e){const o=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(i.Provider,{value:o},e.children)}}}]);