"use strict";(self.webpackChunkgeogardenclub_github_io=self.webpackChunkgeogardenclub_github_io||[]).push([[8989],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>f});var a=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,a,n=function(e,t){if(null==e)return{};var o,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(o),h=n,f=u["".concat(s,".").concat(h)]||u[h]||d[h]||r;return o?a.createElement(f,l(l({ref:t},p),{},{components:o})):a.createElement(f,l({ref:t},p))}));function f(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=o.length,l=new Array(r);l[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:n,l[1]=i;for(var c=2;c<r;c++)l[c]=o[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,o)}h.displayName="MDXCreateElement"},3820:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=o(7462),n=(o(7294),o(3905));const r={hide_table_of_contents:!0},l="Backups",i={unversionedId:"develop/release-1.0/backups",id:"develop/release-1.0/backups",title:"Backups",description:"Our current backup approach is to use Firefoo to create a JSON file containing all of the documents in the GGC Firestore database, compress this file, and upload it to the geogardenclub/backups repository.   The goal is to do this every week or two, so that in the event of catastrophe, we can restore the database to a state that doesn't lose too much work.",source:"@site/docs/develop/release-1.0/backups.md",sourceDirName:"develop/release-1.0",slug:"/develop/release-1.0/backups",permalink:"/docs/develop/release-1.0/backups",draft:!1,tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"developSidebar",previous:{title:"Testing",permalink:"/docs/develop/release-1.0/testing"},next:{title:"Architecture",permalink:"/docs/develop/release-1.0/architecture"}},s={},c=[{value:"1. Download and install Firefoo",id:"1-download-and-install-firefoo",level:2},{value:"2. Export a JSON file containing all collections",id:"2-export-a-json-file-containing-all-collections",level:2},{value:"3. Rename, compress, and upload the backup",id:"3-rename-compress-and-upload-the-backup",level:2},{value:"4. Restoring from backup",id:"4-restoring-from-backup",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...o}=e;return(0,n.kt)(u,(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"backups"},"Backups"),(0,n.kt)("p",null,"Our current backup approach is to use Firefoo to create a JSON file containing all of the documents in the GGC Firestore database, compress this file, and upload it to the geogardenclub/backups repository.   The goal is to do this every week or two, so that in the event of catastrophe, we can restore the database to a state that doesn't lose too much work."),(0,n.kt)("p",null,"Here are the steps."),(0,n.kt)("h2",{id:"1-download-and-install-firefoo"},"1. Download and install Firefoo"),(0,n.kt)("p",null,"Firefoo is located ",(0,n.kt)("a",{parentName:"p",href:"https://www.firefoo.app/"},"here"),"."),(0,n.kt)("p",null,"Once installed, you need to load the GGC Firestore database.  When successful, the Firefoo screen should look something like this:"),(0,n.kt)("img",{src:"/img/develop/release-1.0/backup-0.png"}),(0,n.kt)("h2",{id:"2-export-a-json-file-containing-all-collections"},"2. Export a JSON file containing all collections"),(0,n.kt)("p",null,'Right click on "ggc-app" in the left side-bar, and then select "Export All Collections..." '),(0,n.kt)("img",{src:"/img/develop/release-1.0/backup-1.png"}),(0,n.kt)("p",null,'Select "Newline-delimited JSON" as the format, then click "Export" to export a file containing a separate line for each document in the database.'),(0,n.kt)("img",{src:"/img/develop/release-1.0/backup-2.png"}),(0,n.kt)("p",null,'This will create a file named something like "ggc-app-2de7b-1711139889.jsonl".'),(0,n.kt)("h2",{id:"3-rename-compress-and-upload-the-backup"},"3. Rename, compress, and upload the backup"),(0,n.kt)("p",null,'Next, rename the file with the format "ggc-backup-YYYY-MM-DD.jsonl" so that the file name contains the date that the backup was made.'),(0,n.kt)("p",null,'Next, compress the file. The compressed file will have the name "ggc-backup-YYYY-MM-DD.jsonl.zip" and will be much, much smaller, typically 10% or less. For example, as of May 2024, the uncompressed file was around 1 MB, and the compressed file was 87 KB.'),(0,n.kt)("p",null,'Finally, upload the file to the geogardenclub "backups" repo. When done, the repo will look something like this:'),(0,n.kt)("img",{src:"/img/develop/release-1.0/backup-3.png"}),(0,n.kt)("h2",{id:"4-restoring-from-backup"},"4. Restoring from backup"),(0,n.kt)("p",null,"This should involve the following steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Download the latest zip file from the backups repository and uncompress."),(0,n.kt)("li",{parentName:"ol"},'Right-click on the ggc-app and select "Import collections". '),(0,n.kt)("li",{parentName:"ol"},'Select the backup file and click "Import".')),(0,n.kt)("p",null,"I have never done this, so I cannot verify that this will work."))}d.isMDXComponent=!0}}]);