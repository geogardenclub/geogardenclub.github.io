"use strict";(self.webpackChunkgeogardenclub_github_io=self.webpackChunkgeogardenclub_github_io||[]).push([[5138],{8062:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var a=o(4848),n=o(8453);const i={hide_table_of_contents:!1,toc_max_heading_level:2},s="Cloud Storage Data Model",d={id:"develop/data-model/cloud-storage-data-model",title:"Cloud Storage Data Model",description:"This page explains the cloud storage data model (i.e. the way our Cloud Storage bucket is organized).",source:"@site/docs/develop/data-model/cloud-storage-data-model.md",sourceDirName:"develop/data-model",slug:"/develop/data-model/cloud-storage-data-model",permalink:"/docs/develop/data-model/cloud-storage-data-model",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{hide_table_of_contents:!1,toc_max_heading_level:2},sidebar:"developSidebar",previous:{title:"Document Data Model",permalink:"/docs/develop/data-model/document-data-model"},next:{title:"Database management",permalink:"/docs/develop/database-management"}},r={},l=[{value:"Overview",id:"overview",level:2},{value:"The <code>/images</code> folder",id:"the-images-folder",level:2},{value:"The <code>/backups</code> folder",id:"the-backups-folder",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"cloud-storage-data-model",children:"Cloud Storage Data Model"})}),"\n",(0,a.jsx)(t.p,{children:"This page explains the cloud storage data model (i.e. the way our Cloud Storage bucket is organized)."}),"\n",(0,a.jsxs)(t.p,{children:["There is also a ",(0,a.jsx)(t.a,{href:"/docs/develop/data-model/document-data-model",children:"Document Data Model"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(t.p,{children:"We currently use Google Cloud Storage for two purposes:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"To store the image files associated with various entities."}),"\n",(0,a.jsx)(t.li,{children:"To store a snapshot copy of the Firebase collections and documents for offsite backup."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:'Our Cloud Storage consists of a single "bucket", which is organized into a set of "folders" (and subfolders).  Note that the folder concept is implemented through a naming convention for the objects in a bucket: if the path name contains "/" characters, these are interpreted as demarcating a hierarchy of folders with a file at the end of the string. Note that using this convention, it is possible to have multiple files in a single folder (i.e. "/a/b/foo.jpg", "/a/b/bar.jpg").'}),"\n",(0,a.jsxs)(t.p,{children:["To support the two purposes, the GGC bucket contains two top-level folders: ",(0,a.jsx)(t.code,{children:"/images"})," and ",(0,a.jsx)(t.code,{children:"/backups"}),"."]}),"\n",(0,a.jsxs)(t.h2,{id:"the-images-folder",children:["The ",(0,a.jsx)(t.code,{children:"/images"})," folder"]}),"\n",(0,a.jsxs)(t.p,{children:["A primary goal of the data model for the ",(0,a.jsx)(t.code,{children:"/images"})," folder is to create a one-to-one relationship between a documentID field that contains an image and the path to that image. In other words, given a documentID and the field of interest within that document, it is possible to deterministically construct the name of the file within the bucket.  Conversely, given the name of a file in our bucket, one can parse the string to determine the documentID and field of interest."]}),"\n",(0,a.jsx)(t.p,{children:'This one-to-one relationship simplifies management of Cloud Storage For example, it makes it easier to perform "integrity checking" (i.e. making sure that all Cloud Storage files referenced in our Firebase collections exist, and that all Cloud Storage files are actually referenced by a document in a Firebase collection.)'}),"\n",(0,a.jsx)(t.p,{children:"The one-to-one relationship also simplifies management and inspection of Cloud Storage using the console by providing a consistent, easy to understand folder hierarchy."}),"\n",(0,a.jsxs)(t.p,{children:["There are currently seven collections that can have images associated with their documents: chapters, chat_rooms, gardens, observations, share_posts, share_replies, and users. So, the ",(0,a.jsx)(t.code,{children:"/images"})," folder contains exactly seven subfolders corresponding to each of these collections: ",(0,a.jsx)(t.code,{children:"/images/chapters"}),", ",(0,a.jsx)(t.code,{children:"/images/gardens"}),", etc."]}),"\n",(0,a.jsxs)(t.p,{children:["Inside each of these subfolders are another set of subfolders that are named with the documentID in the associated collection that contains an image. So, for example, there might be a subfolder named ",(0,a.jsx)(t.code,{children:"images/gardens/garden-US-98225-101-0404/"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["Inside that subfolder are one or more subfolders containing the field name which stores the URL to an image file. In the case of gardens, there are two fields (pictureURL and plotPlanURL), so there might be two subfolders named ",(0,a.jsx)(t.code,{children:"images/gardens/garden-US-98225-101-0404/pictureURL"})," and ",(0,a.jsx)(t.code,{children:"images/gardens/garden-US-98225-101-0404/plotPlanURL"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:['Now that we\'re at the field level, the final part of the path name is simply the name of the file.  By convention, this name will be the field name with a ".jpg" suffix (our image upload library is configured to always create a JPG file). So, for example,  ',(0,a.jsx)(t.code,{children:"images/gardens/garden-US-98225-101-0404/pictureURL/pictureURL.jpg"})," and ",(0,a.jsx)(t.code,{children:"images/gardens/garden-US-98225-101-0404/plotPlanURL/plotPlanURL.jpg"}),"."]}),"\n",(0,a.jsx)(t.admonition,{type:"info",children:(0,a.jsxs)(t.p,{children:["While we currently only allow a single image file per field, it is very possible that this restriction could be relaxed in the future to allow multiple images for a field. In that case, the data model will be revised to allow multiple files in the ",(0,a.jsx)(t.code,{children:"pictureURL"})," folder and a new, backward-compatible naming convention will be provided."]})}),"\n",(0,a.jsx)(t.p,{children:"Now that you've seen an example, here's a specification that covers all image file names:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"/images/<collection-name>/<documentID>/<field-name>/<field-name>.jpg\n"})}),"\n",(0,a.jsx)(t.p,{children:'So, given a documentID like "garden-US-98225-101-0404", and a field name like "plotPlanURL", we have everything we need to construct the complete file path to the associated image file.'}),"\n",(0,a.jsx)(t.p,{children:'Note that we can determine the collection name by extracting the initial prefix from the documentID (i.e. "garden") and mapping that to its associated collection name (i.e. "gardens").'}),"\n",(0,a.jsx)(t.p,{children:"Conversely, given the file path to an image, we can parse the string to determine the single collection name, documentID and field name associated with the image."}),"\n",(0,a.jsx)(t.admonition,{title:"We don't adhere to this convention yet",type:"warning",children:(0,a.jsx)(t.p,{children:"Note that this specification is our goal for Google Cloud Storage. We have not yet transitioned to it yet."})}),"\n",(0,a.jsxs)(t.h2,{id:"the-backups-folder",children:["The ",(0,a.jsx)(t.code,{children:"/backups"})," folder"]}),"\n",(0,a.jsxs)(t.p,{children:["A new folder within the ",(0,a.jsx)(t.code,{children:"/backups"})," folder is created each time the run_backup.sh script is executed. This subfolder is named ",(0,a.jsx)(t.code,{children:"firebase_binary_backup_<timestamp>/"}),", where ",(0,a.jsx)(t.code,{children:"<timestamp>"}),' looks like "2025-06-10_13.03.38".  Inside this folder are a number of subfolders and files containing a binary backup of the GGC Firebase collections.']}),"\n",(0,a.jsx)(t.p,{children:"Once a recent subfolder is created, then the entire Google Cloud Storage bucket can be downloaded for off-site storage."}),"\n",(0,a.jsxs)(t.p,{children:["See ",(0,a.jsx)(t.a,{href:"/docs/develop/backups",children:"Backups"})," for more details."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>d});var a=o(6540);const n={},i=a.createContext(n);function s(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);