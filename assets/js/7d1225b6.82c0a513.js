"use strict";(self.webpackChunkgeogardenclub_github_io=self.webpackChunkgeogardenclub_github_io||[]).push([[4076],{7576:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=o(5893),a=o(1151);const s={hide_table_of_contents:!0},l="Backups",i={id:"develop/backups",title:"Backups",description:"Our current backup approach is to use Firefoo to create a JSON file containing all of the documents in the GGC Firestore database, compress this file, and upload it to the geogardenclub/backups repository.   The goal is to do this every week or two, so that in the event of catastrophe, we can restore the database to a state that doesn't lose too much work.",source:"@site/docs/develop/backups.md",sourceDirName:"develop",slug:"/develop/backups",permalink:"/docs/develop/backups",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"developSidebar",previous:{title:"Testing",permalink:"/docs/develop/testing"},next:{title:"Data Model",permalink:"/docs/develop/design/data-model"}},r={},c=[{value:"1. Download and install Firefoo",id:"1-download-and-install-firefoo",level:2},{value:"2. Export a JSON file containing all collections",id:"2-export-a-json-file-containing-all-collections",level:2},{value:"3. Rename, compress, and upload the backup",id:"3-rename-compress-and-upload-the-backup",level:2},{value:"4. Restoring from backup",id:"4-restoring-from-backup",level:2}];function d(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"backups",children:"Backups"})}),"\n",(0,n.jsx)(t.p,{children:"Our current backup approach is to use Firefoo to create a JSON file containing all of the documents in the GGC Firestore database, compress this file, and upload it to the geogardenclub/backups repository.   The goal is to do this every week or two, so that in the event of catastrophe, we can restore the database to a state that doesn't lose too much work."}),"\n",(0,n.jsx)(t.p,{children:"Here are the steps."}),"\n",(0,n.jsx)(t.h2,{id:"1-download-and-install-firefoo",children:"1. Download and install Firefoo"}),"\n",(0,n.jsxs)(t.p,{children:["Firefoo is located ",(0,n.jsx)(t.a,{href:"https://www.firefoo.app/",children:"here"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Once installed, you need to load the GGC Firestore database.  When successful, the Firefoo screen should look something like this:"}),"\n",(0,n.jsx)("img",{src:"/img/develop/release-1.0/backup-0.png"}),"\n",(0,n.jsx)(t.h2,{id:"2-export-a-json-file-containing-all-collections",children:"2. Export a JSON file containing all collections"}),"\n",(0,n.jsx)(t.p,{children:'Right click on "ggc-app" in the left side-bar, and then select "Export All Collections..."'}),"\n",(0,n.jsx)("img",{src:"/img/develop/release-1.0/backup-1.png"}),"\n",(0,n.jsx)(t.p,{children:'Select "Newline-delimited JSON" as the format, then click "Export" to export a file containing a separate line for each document in the database.'}),"\n",(0,n.jsx)("img",{src:"/img/develop/release-1.0/backup-2.png"}),"\n",(0,n.jsx)(t.p,{children:'This will create a file named something like "ggc-app-2de7b-1711139889.jsonl".'}),"\n",(0,n.jsx)(t.h2,{id:"3-rename-compress-and-upload-the-backup",children:"3. Rename, compress, and upload the backup"}),"\n",(0,n.jsx)(t.p,{children:'Next, rename the file with the format "ggc-backup-YYYY-MM-DD.jsonl" so that the file name contains the date that the backup was made.'}),"\n",(0,n.jsx)(t.p,{children:'Next, compress the file. The compressed file will have the name "ggc-backup-YYYY-MM-DD.jsonl.zip" and will be much, much smaller, typically 10% or less. For example, as of May 2024, the uncompressed file was around 1 MB, and the compressed file was 87 KB.'}),"\n",(0,n.jsx)(t.p,{children:'Finally, upload the file to the geogardenclub "backups" repo. When done, the repo will look something like this:'}),"\n",(0,n.jsx)("img",{src:"/img/develop/release-1.0/backup-3.png"}),"\n",(0,n.jsx)(t.h2,{id:"4-restoring-from-backup",children:"4. Restoring from backup"}),"\n",(0,n.jsx)(t.p,{children:"This should involve the following steps:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Download the latest zip file from the backups repository and uncompress."}),"\n",(0,n.jsx)(t.li,{children:'Right-click on the ggc-app and select "Import collections".'}),"\n",(0,n.jsx)(t.li,{children:'Select the backup file and click "Import".'}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"I have never done this, so I cannot verify that this will work."})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,t,o)=>{o.d(t,{Z:()=>i,a:()=>l});var n=o(7294);const a={},s=n.createContext(a);function l(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);