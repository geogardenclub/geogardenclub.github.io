"use strict";(self.webpackChunkgeogardenclub_github_io=self.webpackChunkgeogardenclub_github_io||[]).push([[8754],{8312:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var i=t(5893),o=t(1151);const a={hide_table_of_contents:!1},s="Installation",r={id:"develop/installation",title:"Installation",description:"Flutter",source:"@site/docs/develop/installation.md",sourceDirName:"develop",slug:"/develop/installation",permalink:"/docs/develop/installation",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{hide_table_of_contents:!1},sidebar:"developSidebar",previous:{title:"Onboarding",permalink:"/docs/develop/onboarding"},next:{title:"Architecture",permalink:"/docs/develop/architecture"}},l={},d=[{value:"Flutter",id:"flutter",level:2},{value:"Tool versions",id:"tool-versions",level:2},{value:"Install the app",id:"install-the-app",level:2},{value:"Run the app",id:"run-the-app",level:2},{value:"...with live data",id:"with-live-data",level:3},{value:"...with test data",id:"with-test-data",level:3},{value:"... with a physical device",id:"-with-a-physical-device",level:3},{value:"Integration tests",id:"integration-tests",level:2},{value:"Editor",id:"editor",level:2},{value:"Monarch",id:"monarch",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"installation",children:"Installation"})}),"\n",(0,i.jsx)(n.h2,{id:"flutter",children:"Flutter"}),"\n",(0,i.jsxs)(n.p,{children:["Follow the ",(0,i.jsx)(n.a,{href:"https://docs.flutter.dev/get-started/install",children:"Flutter Installation"})," instructions."]}),"\n",(0,i.jsxs)(n.p,{children:["It is important that you are able to run ",(0,i.jsx)(n.code,{children:"flutter doctor"})," without error:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"% flutter doctor\nDoctor summary (to see all details, run flutter doctor -v):\n[\u2713] Flutter (Channel stable, 3.10.0, on macOS 13.3.1 22E772610a darwin-arm64, locale en-US)\n[\u2713] Android toolchain - develop for Android devices (Android SDK version 33.0.1)\n[\u2713] Xcode - develop for iOS and macOS (Xcode 14.3)\n[\u2713] Chrome - develop for the web\n[\u2713] Android Studio (version 2021.3)\n[\u2713] IntelliJ IDEA Ultimate Edition (version 2023.1)\n[\u2713] Connected device (3 available)\n[\u2713] Network resources\n\n\u2022 No issues found!\n"})}),"\n",(0,i.jsx)(n.h2,{id:"tool-versions",children:"Tool versions"}),"\n",(0,i.jsx)(n.p,{children:"It turns out that getting Flutter Doctor to report no issues is not enough.  There are other tech stack components which must also be at an appropriate version in order for the app to run successfully during development.  In some cases, there might be multiple possible versions, but every developer must be using the same version of the tools; otherwise the app will run for some developers but not for others."}),"\n",(0,i.jsxs)(n.p,{children:["In order to help developers ensure that they have the same tech stack environment, we have implemented a script called ",(0,i.jsx)(n.code,{children:"run_tool_versions.sh"})," that prints versions of the tech stack tools important to getting GGC to run correctly."]}),"\n",(0,i.jsxs)(n.p,{children:["Our Discord server has a channel called ",(0,i.jsx)(n.code,{children:"#tool-versions"})," where developers post the output from running this script. This helps all of us to stay on the same page, and when one person updates a component of the tech stack, they can post the new output from the script so that everyone else can update their tech stack to match the new version(s) of components."]}),"\n",(0,i.jsxs)(n.p,{children:["Here is an example of the output from ",(0,i.jsx)(n.code,{children:"run_tool_versions.sh"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"% ./run_tool_versions.sh\nComputer Name: PMJ M2 2023\nCocoapods 1.15.2\nDart SDK version: 3.5.4 \nFlutter 3.24.4 \nMacOS 14.6.1\nMonarch version 2.2.7\nruby 3.2.2 (202\nXcode 16.0\n"})}),"\n",(0,i.jsx)(n.p,{children:"Be sure to run this script locally and check it against the output from the Discord channel."}),"\n",(0,i.jsx)(n.p,{children:'Different components have different "tolerances" for version matching. In general, you should make sure that your version of Cocoapods, Dart, Flutter, Monarch, and XCode matches the Discord channel\'s latest versions exactly.'}),"\n",(0,i.jsx)(n.p,{children:'For Ruby, it appears that any 3.x version is good enough. Similarly, getting "close" with respect to MacOS version is generally close enough.'}),"\n",(0,i.jsx)(n.p,{children:"Note that all GGC development is done using macOS. We do not support Windows or Unix-based development at this time."}),"\n",(0,i.jsx)(n.h2,{id:"install-the-app",children:"Install the app"}),"\n",(0,i.jsxs)(n.p,{children:["To install the app, first clone the sources from ",(0,i.jsx)(n.a,{href:"https://github.com/geogardenclub/ggc_app",children:"https://github.com/geogardenclub/ggc_app"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Next, cd into the ggc_app directory and run ",(0,i.jsx)(n.code,{children:"flutter pub get"}),". For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'% flutter pub get\nRunning "flutter pub get" in ggc_app...\nResolving dependencies... (1.4s)\n  _fe_analyzer_shared 58.0.0 (59.0.0 available)\n  analyzer 5.10.0 (5.11.1 available)\n  async 2.10.0 (2.11.0 available)\n  build_daemon 3.1.1 (4.0.0 available)\n  build_runner 2.3.3 (2.4.1 available)\n  characters 1.2.1 (1.3.0 available)\n  collection 1.17.0 (1.17.1 available)\n  flex_color_scheme 7.0.3 (7.0.4 available)\n  flutter_form_builder 7.8.0 (8.0.0 available)\n  flutter_riverpod 2.3.5 (2.3.6 available)\n  flutter_svg 1.1.6 (2.0.5 available)\n  go_router 6.5.7 (6.5.8 available)\n  intl 0.17.0 (0.18.1 available)\n  js 0.6.5 (0.6.7 available)\n  matcher 0.12.13 (0.12.15 available)\n  material_color_utilities 0.2.0 (0.3.0 available)\n  meta 1.8.0 (1.9.1 available)\n  monarch 3.0.1 (3.4.0 available)\n  path 1.8.2 (1.8.3 available)\n  path_provider_windows 2.1.5 (2.1.6 available)\n  petitparser 5.1.0 (5.4.0 available)\n  riverpod 2.3.5 (2.3.6 available)\n  source_span 1.9.1 (1.10.0 available)\n  sqflite 2.2.6 (2.2.7 available)\n  sqflite_common 2.4.3 (2.4.4 available)\n  synchronized 3.0.1 (3.1.0 available)\n  test_api 0.4.16 (0.5.2 available)\n  vm_service 11.3.0 (11.4.0 available)\n  win32 3.1.4 (4.1.3 available)\n  xml 6.2.2 (6.3.0 available)\nGot dependencies!\n'})}),"\n",(0,i.jsx)(n.h2,{id:"run-the-app",children:"Run the app"}),"\n",(0,i.jsx)(n.h3,{id:"with-live-data",children:"...with live data"}),"\n",(0,i.jsxs)(n.p,{children:["To check that the ggc_app runs in your development environment, the simplest thing to do is to invoke ",(0,i.jsx)(n.code,{children:"flutter run"})," and select Chrome:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'% flutter run\nMultiple devices found:\nmacOS (desktop) \u2022 macos  \u2022 darwin-arm64   \u2022 macOS 13.3.1 22E261 darwin-arm64\nChrome (web)    \u2022 chrome \u2022 web-javascript \u2022 Google Chrome 112.0.5615.137\n[1]: macOS (macos)\n[2]: Chrome (chrome)\nPlease choose one (To quit, press "q/Q"): 2\nLaunching lib/main.dart on Chrome in debug mode...\nWaiting for connection from debug service on Chrome...             16.5s\nThis app is linked to the debug service: ws://127.0.0.1:58007/FT3-VNs7AGk=/ws\nDebug service listening on ws://127.0.0.1:58007/FT3-VNs7AGk=/ws\n\n\ud83d\udcaa Running with sound null safety \ud83d\udcaa\n\n\ud83d\udd25  To hot restart changes while running, press "r" or "R".\nFor a more detailed help message, press "h". To quit, press "q".\n\nAn Observatory debugger and profiler on Chrome is available at: http://127.0.0.1:58007/FT3-VNs7AGk=\nWARNING: found an existing <meta name="viewport"> tag. Flutter Web uses its own viewport configuration for better compatibility with\nFlutter. This tag will be replaced.\nThe Flutter DevTools debugger and profiler on Chrome is available at: http://127.0.0.1:9100?uri=http://127.0.0.1:58007/FT3-VNs7AGk=\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"If all goes well, you should see a window similar to the following appear:"}),"\n",(0,i.jsx)("img",{src:"/img/develop/getting-started/installation-ggc-chrome.png"}),"\n",(0,i.jsx)(n.p,{children:"This means the app is up and is connected to the production Firebase database. At this point, you can login as one of the existing users to make sure communication with Firebase is working correctly. Contact Philip for credentials."}),"\n",(0,i.jsx)(n.h3,{id:"with-test-data",children:"...with test data"}),"\n",(0,i.jsxs)(n.p,{children:["During development, it is usually safer and more appropriate to not manipulate the production database. As an alternative, instead of invoking ",(0,i.jsx)(n.code,{children:"flutter run"}),", you invoke ",(0,i.jsx)(n.code,{children:"flutter run lib/main_test_fixture.dart"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'~/GitHub/geogardenclub/ggc_app $ flutter run lib/main_test_fixture.dart\nLaunching lib/main_test_fixture.dart on iPhone 15 Pro in debug mode...\nRunning Xcode build...                                                  \n \u2514\u2500Compiling, linking and signing...                         7.2s\nXcode build done.                                           45.7s\nSyncing files to device iPhone 15 Pro...                           149ms\n\nFlutter run key commands.\nr Hot reload. \ud83d\udd25\ud83d\udd25\ud83d\udd25\nR Hot restart.\nh List all available interactive commands.\nd Detach (terminate "flutter run" but leave application running).\nc Clear the screen\nq Quit (terminate the application on the device).\n\nA Dart VM Service on iPhone 15 Pro is available at: http://127.0.0.1:64617/Tfq60_DovMo=/\nThe Flutter DevTools debugger and profiler on iPhone 15 Pro is available at:\nhttp://127.0.0.1:9102?uri=http://127.0.0.1:64617/Tfq60_DovMo=/\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsx)(n.p,{children:'In IntelliJ, you can create a "Run Configuration" that enables you to run with the test database by clicking the green arrow at the top of the IntelliJ window.'})]}),"\n",(0,i.jsxs)(n.p,{children:["This command overrides the Riverpod providers so that they load the test fixture data in ",(0,i.jsx)(n.code,{children:"assets/test/fixture1"}),".  Note that changes you make with the UI are never written to these files, so if you reload the system during development, the app state will be restored to the test fixture state. However, as long as you do not reload, changes to the data are reflected in the UI, making this a good way to test out changes to the system without fear of affecting the production database in a negative manner."]}),"\n",(0,i.jsx)(n.h3,{id:"-with-a-physical-device",children:"... with a physical device"}),"\n",(0,i.jsx)(n.p,{children:"Sometimes it is useful to run the app on a physical device rather than the simulator. Currently only Philip can do this due to iOS signing issues."}),"\n",(0,i.jsx)(n.p,{children:"Here is how to do it:"}),"\n",(0,i.jsx)(n.p,{children:"First, delete the app from your physical device."}),"\n",(0,i.jsx)(n.p,{children:"Second, connect the physical device to a laptop."}),"\n",(0,i.jsxs)(n.p,{children:["Third, run ",(0,i.jsx)(n.code,{children:"flutter devices"})," to verify that the device shows up. You should see output like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:" % flutter devices    \nFound 5 connected devices:\n  Philip's iPhone (mobile)        \u2022 00008030-000364940A98802E            \u2022 ios            \u2022 iOS 17.5.1 21F90\n  iPhone 11 (mobile)              \u2022 8E550E86-3173-4342-B197-A557B83E40A2 \u2022 ios            \u2022 com.apple.CoreSimulator.SimRuntime.iOS-17-5\n  (simulator)\n  macOS (desktop)                 \u2022 macos                                \u2022 darwin-arm64   \u2022 macOS 14.4.1 23E224 darwin-arm64\n  Mac Designed for iPad (desktop) \u2022 mac-designed-for-ipad                \u2022 darwin         \u2022 macOS 14.4.1 23E224 darwin-arm64\n  Chrome (web)                    \u2022 chrome                               \u2022 web-javascript \u2022 Google Chrome 125.0.6422.113\n"})}),"\n",(0,i.jsx)(n.p,{children:"Notice that the first device is my phone connected to my laptop."}),"\n",(0,i.jsxs)(n.p,{children:["Now, to run the code in release mode on this physical device, you invoke ",(0,i.jsx)(n.code,{children:"flutter run --release"})," and select the physical device as shown below.  (Make sure your device is unlocked while running this command.)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"% flutter run --release\nConnected devices:\nPhilip's iPhone (mobile)        \u2022 00008030-000364940A98802E            \u2022 ios            \u2022 iOS 17.5.1 21F90\niPhone 11 (mobile)              \u2022 8E550E86-3173-4342-B197-A557B83E40A2 \u2022 ios            \u2022 com.apple.CoreSimulator.SimRuntime.iOS-17-5\n(simulator)\nmacOS (desktop)                 \u2022 macos                                \u2022 darwin-arm64   \u2022 macOS 14.4.1 23E224 darwin-arm64\nMac Designed for iPad (desktop) \u2022 mac-designed-for-ipad                \u2022 darwin         \u2022 macOS 14.4.1 23E224 darwin-arm64\nChrome (web)                    \u2022 chrome                               \u2022 web-javascript \u2022 Google Chrome 125.0.6422.113\n\nChecking for wireless devices...\n\nNo wireless devices were found.\n\n[1]: Philip's iPhone (00008030-000364940A98802E)\n[2]: iPhone 11 (8E550E86-3173-4342-B197-A557B83E40A2)\n[3]: macOS (macos)\n[4]: Mac Designed for iPad (mac-designed-for-ipad)\n[5]: Chrome (chrome)\nPlease choose one (or \"q\" to quit): 1\nLaunching lib/main.dart on Philip's iPhone in release mode...\nAutomatically signing iOS for device deployment using specified development team in Xcode project: 8M69898HLM\nRunning Xcode build...                                                  \n \u2514\u2500Compiling, linking and signing...                         8.8s\nXcode build done.                                           67.9s\nInstalling and launching...                                         7.1s\n\nFlutter run key commands.\nh List all available interactive commands.\nc Clear the screen\nq Quit (terminate the application on the device).\n\n"})}),"\n",(0,i.jsx)(n.h2,{id:"integration-tests",children:"Integration tests"}),"\n",(0,i.jsxs)(n.p,{children:["The next step is to ensure that you can run the integration tests.  Please follow the instructions on the ",(0,i.jsx)(n.a,{href:"/docs/develop/quality-assurance/testing",children:"Testing"})," page. If you cannot run the tests without encountering a test failure, please contact a developer for assistance."]}),"\n",(0,i.jsx)(n.h2,{id:"editor",children:"Editor"}),"\n",(0,i.jsx)(n.p,{children:"There are three good choices for your Editor: Visual Studio, Android Studio, or IntelliJ IDEA Ultimate (with the Dart and Flutter plugins, which makes it almost equivalent to Android Studio)."}),"\n",(0,i.jsx)(n.p,{children:"With IntelliJ IDEA Ultimate, after bringing up the project, you should see a run toolbar at the top which gives you (on a Mac) the option of opening the iOS simulator:"}),"\n",(0,i.jsx)("img",{src:"/img/develop/getting-started/installation-open-ios.png"}),"\n",(0,i.jsx)(n.p,{children:"After opening the simulator, it should appear and you should be able to emulate the system on an iOS device:"}),"\n",(0,i.jsx)("img",{src:"/img/develop/getting-started/installation-run-ios.png"}),"\n",(0,i.jsx)(n.p,{children:"It takes a couple of minutes to do all of the XCode shenanigans the first time you run it, but eventually you should see something like the following:"}),"\n",(0,i.jsx)("img",{src:"/img/develop/getting-started/installation-run-ios-2.png"}),"\n",(0,i.jsx)(n.p,{children:"As before, consult with Philip for login credentials."}),"\n",(0,i.jsx)(n.h2,{id:"monarch",children:"Monarch"}),"\n",(0,i.jsxs)(n.p,{children:["According to their home page, ",(0,i.jsx)(n.a,{href:"https://monarchapp.io/",children:"Monarch"}),' is a "tool for building Flutter widgets in isolation. It makes it easy to build, test and debug complex UIs." Monarch is basically a Flutter port of React Storybook, which is popular in React UI development.']}),"\n",(0,i.jsxs)(n.p,{children:["Follow the ",(0,i.jsx)(n.a,{href:"https://monarchapp.io/docs/install",children:"Monarch installation instructions"})," to install the tool."]}),"\n",(0,i.jsxs)(n.p,{children:["Then, invoke ",(0,i.jsx)(n.code,{children:"./run_monarch.sh"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"You will see the Monarch UI appear:"}),"\n",(0,i.jsx)("img",{src:"/img/develop/getting-started/monarch.png"}),"\n",(0,i.jsx)(n.p,{children:'Select one of our themes (currently, "Green Theme: Light"). Then select a story, such as "showHomeScreenTasks", and Monarch will show the story:'}),"\n",(0,i.jsx)("img",{src:"/img/develop/getting-started/monarch-2.png"}),"\n",(0,i.jsxs)(n.p,{children:["Monarch loads the data in the ",(0,i.jsx)(n.code,{children:"test/fixture1"})," files to populate screens."]}),"\n",(0,i.jsx)(n.p,{children:"At present, Monarch seems most useful when experimenting with different themes. Monarch allows you to switch themes and see the results on your widget(s) of interest by simply selecting from the Theme menu.  In contrast, in the simulator, you would need to navigate from the screen displaying the widget(s) of interest to the Settings page (in order to select the new theme), and then navigate back to the screen displaying the widget(s) of interest."}),"\n",(0,i.jsxs)(n.admonition,{title:"Ignore Firebase exceptions",type:"info",children:[(0,i.jsx)(n.p,{children:"Unfortunately, the console window will print out error messages similar to the following when using Monarch:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"\u2550\u2550\u2561 EXCEPTION CAUGHT BY MONARCH \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nThe following message was thrown while a story was selected:\n[core/no-app] No Firebase App '[DEFAULT]' has been created - call Firebase.initializeApp()\n"})}),(0,i.jsx)(n.p,{children:"You can ignore these messages as Monarch does not actually invoke Firebase."})]})]})}function c(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>s});var i=t(7294);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);